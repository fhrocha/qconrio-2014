{\rtf1\ansi\ansicpg1252\cocoartf1265\cocoasubrtf210
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0\b\fs28 \cf0 \ul \ulc0 JAR HELL\

\b0 \ulnone \
1) Mostra projeto jars-modelo-1.0.0, pacotes modelo \
1.1) Chama aten\'e7\'e3o da versao, mostra a classe Versao e 1.0.0\
1.2) Mostra pacote financeiro\
\
2) Adicione o ant xml no ant view e chame package para gerar o jars\
 \
3) Atualize o projeto mostra os jars\
\
4) Copie os JARs para o jars-modelo-teste\
\
5) Roda o main - OK\
\
6) Importe o projeto jars-modelo-1.1.0\
\
7) Mostra as altera\'e7\'f5es (Cheque  e servico comercial)\
\
8) Adicione o ant xml no ant view e rode package para gera os JARs\
\
9) Copie os JARs para o jars-modelo-teste (deixe modelo-1.0.0.jar)\
\
10) Abre Main_1_1_0 e descomenta o c\'f3digo\
\
11) rode main e mostra console\
\
12) tire o  modelo-1.0.0.jar do build-path e adicione de novo, rode de novo\
\

\b \ul Classloader Hell\

\b0 \ulnone \
1) mostra o projeto hotdeploy e a classe Inicializa\
\
2) Fala do listener e a classe System\
\
3) sobe tomcat, mostra o GC\
\
4) sobre jconsole e mostra a aba mem\'f3ria\
\
5) faca hot deploy at\'e9 estroura\
\
6) mostra o permgen no console, proporcional ao classloading\
\

\b \ul OSGI Modulos\
\

\b0 \ulnone 1) Mostra o projeto, tudo igual menos um pacote programa\
\
2) adicione o ant xml no view\
\
3) tudo igual, mas agora tem MF files\
\
4) roda \'93package e mostra o manifest adicionando no classpath\'93
\b \ul \

\b0 \ulnone \
5) copia os JARS (menos o activator), joga na raiz do usu\'e1rio\
\
6) extrai o runtime karaf e sobe ele na linha de comando\
\
7) instala o primeiro modulo\
\
bundle:install file:/Users/nico/modelo-1.1.0.jar
\b \ul \

\b0 \ulnone bundle:install file:/Users/nico/financeiro-1.0.0.jar\
bundle:install file:/Users/nico/comercial-1.1.0.jar\
\
8) lista todas mostra headers\
\
9) resolve bundles\
\
10) mostra activator e copie activator para pasta deploy\
\
12) uninstall tudo, mostra feature mas agora com modelo 1.0.0\
\
13) copia feature pelo ant, mostra bundle:list e feature:list\
\
14) instala feature demora!!!\
\
15) mostra bundles instalados e resolve tudo\
\
16) mostra conflitos e roda, ClassCastException\
\
17) uninstall bundle modelo-1.0.0\
\
18) refresh activator\
\

\b \ul JPA e Spring\

\b0 \ulnone \
1) mostra projeto jpa: datasource, persistence.xml, \
2) mostra entity
\b \ul \

\b0 \ulnone 3) mostra servico com interface\
4) mvm clean install \
5) mostra feature (com depend\'eancias, driver, bundle)
\b \ul \

\b0 \ulnone 6) repo add\
\pard\pardeftab720

\f1\fs22 \cf0 feature:repo-add mvn:br.com.caelum.qcon/jpa-qcon/1.1.0/xml/features\

\f0\fs28 7) feature:install jpa-qcon\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 8)bundle:list\
9) headers para mostrar o service \
10) 
\f1\fs22 feature:repo-add mvn:br.com.caelum.qcon/spring\'97mvc-qcon/1.1.0/xml/features
\f0\fs28 \
\
\
\
}